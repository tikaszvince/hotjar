<?php
/**
 * @file
 * Drupal Module: Hotjar.
 *
 * Adds the required Javascript to all your Drupal pages to allow
 * tracking by hotjar (https://www.hotjar.com/).
 */

use Drupal\Component\Utility\Unicode;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Define default path exclusion list to remove tracking from admin pages.
 *
 * See http://drupal.org/node/34970 for more information.
 */
// @codingStandardsIgnoreStart
/**
 * Default page list for admin path check.
 *
 * @deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 8.x-1.6.
 *   Use \Drupal\hotjar\HotjarSettings::HOTJAR_PAGES instead.
 */
define('HOTJAR_PAGES', "/admin\n/admin/*\n/batch\n/node/add*\n/node/*/*\n/user/*/*");

/**
 * Access allow.
 *
 * @deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 8.x-1.6.
 *   Use Drupal\Core\Access\AccessResult::allowed() instead.
 */
define('HOTJAR_ACCESS_ALLOW', TRUE);

/**
 * Access deny.
 *
 * @deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 8.x-1.6.
 *   Use Drupal\Core\Access\AccessResult::forbidden() instead.
 */
define('HOTJAR_ACCESS_DENY', FALSE);

/**
 * Neutral access.
 *
 * @deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 8.x-1.6.
 *   Use Drupal\Core\Access\AccessResult::neutral() instead.
 */
define('HOTJAR_ACCESS_IGNORE', NULL);
// @codingStandardsIgnoreEnd

/**
 * Implements hook_help().
 */
function hotjar_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'hotjar.admin_settings_form':
      return t('<a href="@hotjar_url">Hotjar</a> is a new powerful way to reveal true website user behaviour and experiences in one central tool â€“ giving you the big picture of how you can improve your site\'s UX and conversion rates. All your data is securely stored in the cloud and is accessible at lightning speed.', ['@hotjar_url' => 'https://www.hotjar.com/']);
  }
}

/**
 * Implements hook_rebuild().
 */
function hotjar_rebuild() {
  /** @var \Drupal\hotjar\SnippetBuilderInterface $snippet_builder */
  $snippet_builder = \Drupal::service('hotjar.snippet');
  $snippet_builder->createAssets();
}

/**
 * Get Hotjar settings.
 *
 * @deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 8.x-1.6.
 *   Use \Drupal\hotjar\HotjarSettings::getSettings() instead.
 */
function hotjar_get_settings() {
  @trigger_error('hotjar_get_settings() is deprecated in Hotjar 8.x-1.3 and will be removed before Hotjar 1.6.0. Use \Drupal\hotjar\HotjarSettings::getSettings() instead.', E_USER_DEPRECATED);
  /** @var \Drupal\hotjar\HotjarSettingsInterface $service */
  $service = \Drupal::service('hotjar.settings');
  return $service->getSettings();
}

/**
 * Implements hook_page_attachments().
 *
 * Insert JavaScript to the <head> tag of the page.
 */
function hotjar_page_attachments(array &$attachments) {
  $settings = hotjar_get_settings();
  if (empty($settings['account']) || !_hotjar_access()) {
    return;
  }

  if (_hotjar_cookieconstent_disable() === TRUE) {
    return;
  }

  $uri = 'public://hotjar/hotjar.script.js';
  $query_string = \Drupal::state()->get('system.css_js_query_string') ?: '0';
  $query_string_separator = (strpos($uri, '?') !== FALSE) ? '&' : '?';

  $url = file_url_transform_relative(file_create_url($uri));
  $attachments['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => ['src' => $url . $query_string_separator . $query_string],
    ],
    'hotjar_script_tag',
  ];
}

/**
 * Determines whether we add tracking code to page.
 */
function _hotjar_access() {
  $settings = hotjar_get_settings();
  if (empty($settings['account'])) {
    return FALSE;
  }
  $id = $settings['account'];

  $access = [
    'hotjar_id' => (bool) $id,
    'hotjar_status' => _hotjar_check_status(),
    'hotjar_path' => _hotjar_should_be_added(),
    'hotjar_role' => _hotjar_check_user(),
  ];

  $module_handler = \Drupal::moduleHandler();
  foreach ($module_handler->getImplementations('hotjar_access') as $module) {
    $access[$module] = $module_handler->invoke($module, 'hotjar_access');
  }

  $module_handler->alter('hotjar_access', $access);

  return !in_array(HOTJAR_ACCESS_DENY, $access, TRUE);
}

/**
 * Check Hotjar code should be added.
 */
function _hotjar_should_be_added() {
  $page_match = &drupal_static(__FUNCTION__);
  if (isset($page_match)) {
    return $page_match;
  }

  $settings = hotjar_get_settings();

  $visibility = $settings['visibility_pages'];
  $setting_pages = $settings['pages'];

  if (empty($setting_pages)) {
    $page_match = TRUE;
    return $page_match;
  }

  $pages = Unicode::strtolower($setting_pages);
  if ($visibility < 2) {
    $path = \Drupal::service('path.current')->getPath();
    $path_alias = Unicode::strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($path));
    $path_match = \Drupal::service('path.matcher')->matchPath($path_alias, $pages);
    $alias_match = (($path != $path_alias) && \Drupal::service('path.matcher')->matchPath($path, $pages));
    $page_match = $path_match || $alias_match;

    // When $visibility has a value of 0, the tracking code is displayed on
    // all pages except those listed in $pages. When set to 1, it
    // is displayed only on those pages listed in $pages.
    $page_match = !($visibility xor $page_match);
  }
  else {
    $page_match = FALSE;
  }

  return $page_match;
}

/**
 * Check Hotjar code should be added for user.
 */
function _hotjar_check_user($account = NULL) {
  if (!isset($account)) {
    $account = \Drupal::currentUser();
  }

  $enabled = FALSE;
  if (_hotjar_check_roles($account)) {
    $enabled = TRUE;
  }

  return $enabled;

}

/**
 * Check user role.
 */
function _hotjar_check_roles($account = NULL) {
  /** @var Drupal\Core\Session\AccountProxy $account */
  if (!isset($account)) {
    $account = \Drupal::currentUser();
  }

  $settings = hotjar_get_settings();
  $visibility = $settings['visibility_roles'];
  $enabled = $visibility;
  $roles = $settings['roles'];

  // The hotjar_roles stores the selected roles as an array where
  // the keys are the role IDs. When the role is not selected the
  // value is 0. If a role is selected the value is the role ID.
  $checked_roles = array_filter($roles);
  if (empty($checked_roles)) {
    // No role is selected for tracking, therefore all roles should be tracked.
    return TRUE;
  }

  if (count(array_intersect($account->getRoles(), $checked_roles))) {
    $enabled = !$visibility;
  }

  return $enabled;
}

/**
 * Check current request HTTP status.
 */
function _hotjar_check_status() {
  // Get page status code for visibility filtering.
  $request = \Drupal::request();
  $status = NULL;
  if ($exception = $request->attributes->get('exception')) {
    $status = $exception->getStatusCode();
  }
  $not_tracked_status_codes = [
    '403',
    '404',
  ];
  return !in_array($status, $not_tracked_status_codes);
}

/**
 * Check if any cookie constent module disable hotjar snipet.
 *
 * @return bool|null
 *   Return TRUE if hotjar script needs constent.
 */
function _hotjar_cookieconstent_disable() {
  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
  $module_handler = \Drupal::moduleHandler();
  if ($module_handler->moduleExists('eu_cookie_compliance')) {
    $config = Drupal::config('eu_cookie_compliance.settings');
    $disabled_javascripts = $config->get('disabled_javascripts');
    $disabled_javascripts = _eu_cookie_compliance_explode_multiple_lines($disabled_javascripts);
    if (in_array('sites/default/files/hotjar/hotjar.script.js', $disabled_javascripts)) {
      return TRUE;
    }
  }

  return NULL;
}
